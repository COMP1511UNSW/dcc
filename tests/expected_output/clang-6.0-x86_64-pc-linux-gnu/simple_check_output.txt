*** Test 1 - default-1
*** Test Environment 
expected output: Hello!

actual output  : Hello!

*** Test 2 - no-output-1-fail
*** Test Environment 
expected output: Hello!

actual output  : 

Execution stopped because program produced no output.
1 lines of output were expected
The first expected line was:
Hello!

*** Test 3 - trailing-white-space-1
*** Test Environment 
expected output: Hello!

actual output  : Hello!   

*** Test 4 - trailing-white-space-2-fail
*** Test Environment DCC_IGNORE_TRAILING_WHITE_SPACE=0
expected output: Hello!

actual output  : Hello!   


Execution stopped because of an incorrect output line.
Byte 7 of line 1 of program output was incorrect.
The correct output line was:
Hello!
Your program printed this line:
Hello!   

Execution stopped here in main(argc=2, argv=0x<deleted-hexadecimal-constant>) in tmp.c at line 2:

int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}
#include <stdio.h>
-->int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}

Values when execution stopped:

argc =  <deleted-value>
argv[1] =  <deleted-value>
*** Test 5 - extra-new-line-1-fail
*** Test Environment 
expected output: Hello!

actual output  : Hello!



Execution stopped because of unexpected extra output.
The program produced all the expected output and then produced extra output.
The extra line was an empty line (a '\n').

Execution stopped here in main(argc=2, argv=0x<deleted-hexadecimal-constant>) in tmp.c at line 2:

int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}
#include <stdio.h>
-->int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}

Values when execution stopped:

argc =  <deleted-value>
argv[1] =  <deleted-value>
*** Test 6 - extra-new-line-2
*** Test Environment DCC_IGNORE_EMPTY_LINES=1
expected output: Hello!

actual output  : Hello!


*** Test 7 - missing-new-line-1-fail
*** Test Environment 
expected output: Hello!

actual output  : Hello!

Execution stopped because the last newline was missing.
Your program produced all the expected output, except the last newline ('\n') was missing.

*** Test 8 - ignore-case-1-fail
*** Test Environment 
expected output: Hello!

actual output  : hEllo!


Execution stopped because of an incorrect output line.
Byte 1 of line 1 of program output was incorrect.
The correct output line was:
Hello!
Your program printed this line:
hEllo!

Execution stopped here in main(argc=2, argv=0x<deleted-hexadecimal-constant>) in tmp.c at line 2:

int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}
#include <stdio.h>
-->int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}

Values when execution stopped:

argc =  <deleted-value>
argv[1] =  <deleted-value>
*** Test 9 - ignore-case-2
*** Test Environment DCC_IGNORE_CASE=1
expected output: Hello!

actual output  : hEllo!

*** Test 10 - ignore-white-space-1-fail
*** Test Environment 
expected output: Hello!

actual output  : H ello	!


Execution stopped because of an incorrect output line.
Byte 2 of line 1 of program output was incorrect.
The correct output line was:
Hello!
Your program printed this line:
H ello\t!

Execution stopped here in main(argc=2, argv=0x<deleted-hexadecimal-constant>) in tmp.c at line 2:

int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}
#include <stdio.h>
-->int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}

Values when execution stopped:

argc =  <deleted-value>
argv[1] =  <deleted-value>
*** Test 11 - ignore-white-space-2
*** Test Environment DCC_IGNORE_WHITE_SPACE=1
expected output: Hello!

actual output  : H ello	!

*** Test 12 - ignore-characters-1
*** Test Environment DCC_IGNORE_CHARACTERS=+
expected output: Hello!

actual output  : +++Hello!+++

*** Test 13 - ignore-characters-2-fail
*** Test Environment DCC_IGNORE_CHARACTERS=lzn
expected output: Hello!

actual output  : Hen


Execution stopped because of an incorrect output line.
Byte 4 of line 1 of program output was incorrect.
The characters you printed were correct, but more characters were expected.
The correct output line was:
Hello!
Your program printed this line:
Hen

Execution stopped here in main(argc=2, argv=0x<deleted-hexadecimal-constant>) in tmp.c at line 2:

int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}
#include <stdio.h>
-->int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}

Values when execution stopped:

argc =  <deleted-value>
argv[1] =  <deleted-value>
*** Test 14 - ignore-characters-3
*** Test Environment DCC_IGNORE_CHARACTERS=lzno!
expected output: Hello!

actual output  : Hen

*** Test 15 - compare-only-characters-1-fail
*** Test Environment DCC_COMPARE_ONLY_CHARACTERS=Hel
expected output: Hello!

actual output  : HiheHilloHi	!


Execution stopped because of an incorrect output line.
Byte 5 of line 1 of program output was incorrect.
The correct output line was:
Hello!
Your program printed this line:
HiheHilloHi\t!

Execution stopped here in main(argc=2, argv=0x<deleted-hexadecimal-constant>) in tmp.c at line 2:

int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}
#include <stdio.h>
-->int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}

Values when execution stopped:

argc =  <deleted-value>
argv[1] =  <deleted-value>
*** Test 16 - compare-only-characters-2
*** Test Environment DCC_COMPARE_ONLY_CHARACTERS=el
expected output: Hello!

actual output  : HiheHilloHi	!

*** Test 17 - compare-only-characters-3-fail
*** Test Environment DCC_COMPARE_ONLY_CHARACTERS=hel
expected output: Hello!

actual output  : HiheHilloHi	!


Execution stopped because of an incorrect output line.
Byte 3 of line 1 of program output was incorrect.
The correct output line was:
Hello!
Your program printed this line:
HiheHilloHi\t!

Execution stopped here in main(argc=2, argv=0x<deleted-hexadecimal-constant>) in tmp.c at line 2:

int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}
#include <stdio.h>
-->int main(int argc, char *argv[]) {printf("%s", argv[1]);return 0;}

Values when execution stopped:

argc =  <deleted-value>
argv[1] =  <deleted-value>
*** Test 18 - compare-only-characters-4
*** Test Environment DCC_IGNORE_CASE=1 DCC_COMPARE_ONLY_CHARACTERS=hel
expected output: Hello!

actual output  : Hell

All Tests Correct
